# watermeter 
esphome:
  on_boot:
    - priority: -10
      then: 
        - lambda: |- 
            id(versie).publish_state("v25.5.2");

# Enable Home Assistant API 
# Set pulse counter total from home assistant using this service call:
api:
  services:
    - service: meterstand_water
      variables:
        meter_value: float
      then:
        - globals.set:
            id: initial_water_usage
            value: !lambda "return ( meter_value - (id(total_water_pulses)) * atof(id(Select_pulse_water).state.c_str()) ) ;"
        - globals.set:
            id: total_water_pulses
            value:  "10"
text_sensor:
  - platform: template
    name: "watermeter - versie"
    id: versie
    icon: 'mdi:alpha-v-circle-outline' 
    update_interval: 6h
  - platform: wifi_info
    ip_address:
      name: "watermeter IP-adres"
      id: ip_adres
      icon: mdi:ip-network
    ssid:
      name: "watermeter Netwerk"
      id: netwerk
      icon: mdi:access-point-network
    mac_address:
      name: "watermeter Mac-adres"
      id: mac_adres
      icon: mdi:folder-key-network-outline

globals:
  - id: initial_water_usage
    type: float
    restore_value: yes      
    initial_value: '010' 
  - id: total_water_pulses
    type: int
    restore_value: yes
#  ⬇ Enable time component voor reset elke nacht ⬇ #
time:
  - platform: homeassistant
    id: time_homeassistant
    on_time_sync:
      - component.update: uptime_timestamp
select:
  # ⬇ water per m3 rate ⬇ #
  - platform: template
    name: "Pulsrate water per m3"
    id: Select_pulse_water
    optimistic: true
    options:
      - "0.0001"
      - "0.0005"
      - "0.001"  
      - "0.01"  
      - "0.1"                   
    initial_option: "0.001"
    restore_value: yes
    on_value:
      then:
        - logger.log:
            format: "Chosen option: %s "
            args: ["x.c_str()"]

#------------------------# Watermeter #------------------------#
binary_sensor:
  - platform: gpio
    id: internal_pulse_counter
    name: Pulse Sensor Water
    pin:
      number: GPIO4
      allow_other_uses: true
      inverted: true
      mode:
        input: true
    on_press:
      - then:
          lambda: id(total_water_pulses) += 1;  
sensor:
#------------------------# Watermeter #------------------------#
# ⬇ watermeter pulsen ⬇ #
  - platform: pulse_counter
    pin:
      number: GPIO4
      allow_other_uses: true
    id: watermeter_pulse
    name: "watermeter pulse"
    state_class: measurement
    unit_of_measurement: "l/min"    
    accuracy_decimals: 1
    icon: "mdi:water-pump"
    filters:
      lambda: return x * atof(id(Select_pulse_water).state.c_str()) * 1000;
# ⬇ Totaal watermeter ⬇ #      
    total:
      id: sensor_pulse_meter_total
      name: "watermeter Totaal"
      unit_of_measurement: "m³"
      state_class: total_increasing
      device_class: water
      accuracy_decimals: 3
      filters:
        lambda: return x * atof(id(Select_pulse_water).state.c_str());
# ⬇ Watermeter stand bij benadering ⬇ #
  - platform: template
    id: watermeter_total
    name: "watermeter stand"
    state_class: "total_increasing"
    icon: mdi:water
    unit_of_measurement: "m³"
    accuracy_decimals: 3
    lambda: return id(initial_water_usage) + (id(total_water_pulses) * atof(id(Select_pulse_water).state.c_str()));
# ⬇ Waterpulses  only web interface for debugging ⬇ #
  - platform: template
    id: watermeter_pulses
    name: "watermeter pulses totaal"
    state_class: "total_increasing"
    accuracy_decimals: 0
    lambda: return id(total_water_pulses);
    internal: True
#------------------------#  sensoren #------------------------#
  - platform: uptime
    id: "watermeter_uptime"
  - platform: template
    id: uptime_timestamp
    name: "watermeter online sinds"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    icon: 'mdi:clock-start' 
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(watermeter_uptime).state
      );
      return timestamp;  
# ⬇ versie verbinding informatie sensoren voor in ha ⬇ #
  # WiFi signal
  - platform: wifi_signal
    name: "watermeter - WiFi Signal"
    update_interval: 120s

#  restart button  #
button:  
  - platform: restart
    name: "watermeter Restart device"
# Factory Reset Switch from ESPHome v2022.09    
  - platform: factory_reset
    name: Restart with Factory Default Settings    

switch:
  - platform: gpio
    pin:
      number: GPIO8
      inverted: True
    name: "Esp32Led"


